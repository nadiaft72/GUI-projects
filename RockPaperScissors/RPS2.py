# RockPaperScissors Game
# A PyQt5-based graphical implementation of Rock, Paper, Scissors game.
# The user can choose between Rock, Paper, and Scissors, and the computer's choice is randomly generated.
# The result of the game is displayed on the UI.

from PyQt5 import QtCore, QtGui, QtWidgets
import random

class Ui_MainWindow(object):
    # -*- coding: utf-8 -*-
    # Form implementation generated from reading ui file 'RPS.ui'
    # Created by: PyQt5 UI code generator 5.15.4
    # WARNING: Any manual changes made to this file will be lost when pyuic5 is
    # run again.  Do not edit this file unless you know what you are doing.

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(422, 457)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 10, 401, 421))
        self.frame.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #304352, stop:1 #d7d2cc);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(40, 20, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: none;")
        self.label_3.setObjectName("label_3")
        self.pushButton_Rock = QtWidgets.QPushButton(self.frame)
        self.pushButton_Rock.setGeometry(QtCore.QRect(40, 110, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Rock.setFont(font)
        self.pushButton_Rock.setStyleSheet("QPushButton{\n"
"border-radius:10px;\n"
"background-color: #bdc3c7;\n"
"}\n"
"QPushButton:hover{\n"
"border-radius:10px;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #948E99, stop:1 #2E1437);\n"
"}")
        self.pushButton_Rock.setObjectName("pushButton_Rock")
        self.pushButton_min = QtWidgets.QPushButton(self.frame)
        self.pushButton_min.setGeometry(QtCore.QRect(306, 10, 18, 18))
        self.pushButton_min.setMinimumSize(QtCore.QSize(18, 18))
        self.pushButton_min.setMaximumSize(QtCore.QSize(18, 18))
        self.pushButton_min.setStyleSheet("border-radius:8px;\n"
"background-color: rgb(255, 255, 0);")
        self.pushButton_min.setText("")
        self.pushButton_min.setObjectName("pushButton_min")
        self.pushButton_close = QtWidgets.QPushButton(self.frame)
        self.pushButton_close.setGeometry(QtCore.QRect(360, 10, 18, 18))
        self.pushButton_close.setMinimumSize(QtCore.QSize(18, 18))
        self.pushButton_close.setMaximumSize(QtCore.QSize(18, 18))
        self.pushButton_close.setStyleSheet("border-radius:8px;\n"
"background-color: rgb(255, 8, 8);\n"
"")
        self.pushButton_close.setText("")
        self.pushButton_close.setObjectName("pushButton_close")
        self.pushButton_max = QtWidgets.QPushButton(self.frame)
        self.pushButton_max.setGeometry(QtCore.QRect(333, 10, 18, 18))
        self.pushButton_max.setMinimumSize(QtCore.QSize(18, 18))
        self.pushButton_max.setMaximumSize(QtCore.QSize(18, 18))
        self.pushButton_max.setStyleSheet("border-radius:8px;\n"
"background-color: rgb(0, 255, 0);\n"
"")
        self.pushButton_max.setText("")
        self.pushButton_max.setObjectName("pushButton_max")
        self.pushButton_Paper = QtWidgets.QPushButton(self.frame)
        self.pushButton_Paper.setGeometry(QtCore.QRect(40, 160, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Paper.setFont(font)
        self.pushButton_Paper.setStyleSheet("QPushButton{\n"
"border-radius:10px;\n"
"background-color: #bdc3c7;\n"
"}\n"
"QPushButton:hover{\n"
"border-radius:10px;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #948E99, stop:1 #2E1437);\n"
"}")
        self.pushButton_Paper.setObjectName("pushButton_Paper")
        self.pushButton_Scissors = QtWidgets.QPushButton(self.frame)
        self.pushButton_Scissors.setGeometry(QtCore.QRect(40, 210, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_Scissors.setFont(font)
        self.pushButton_Scissors.setStyleSheet("QPushButton{\n"
"border-radius:10px;\n"
"background-color: #bdc3c7;\n"
"}\n"
"QPushButton:hover{\n"
"border-radius:10px;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #948E99, stop:1 #2E1437);\n"
"}")
        self.pushButton_Scissors.setObjectName("pushButton_Scissors")
        self.label_Result = QtWidgets.QLabel(self.frame)
        self.label_Result.setGeometry(QtCore.QRect(180, 350, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_Result.setFont(font)
        self.label_Result.setStyleSheet("background-color: none;")
        self.label_Result.setText("")
        self.label_Result.setObjectName("label_Result")
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setGeometry(QtCore.QRect(50, 70, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: none;")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setGeometry(QtCore.QRect(30, 280, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: none;")
        self.label_5.setObjectName("label_5")
        self.label_ComputerChoice = QtWidgets.QLabel(self.frame)
        self.label_ComputerChoice.setGeometry(QtCore.QRect(190, 280, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_ComputerChoice.setFont(font)
        self.label_ComputerChoice.setStyleSheet("background-color: none;")
        self.label_ComputerChoice.setText("")
        self.label_ComputerChoice.setObjectName("label_ComputerChoice")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.pushButton_close.clicked.connect(MainWindow.close)
        self.pushButton_max.clicked.connect(MainWindow.showNormal)
        self.pushButton_min.clicked.connect(self.pushButton_min.showMinimized)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "Rock Paper Scissors :"))
        self.pushButton_Rock.setText(_translate("MainWindow", "Rock"))
        self.pushButton_min.setToolTip(_translate("MainWindow", "<html><head/><body ><p>Minimize</p></body></html>"))
        self.pushButton_close.setToolTip(_translate("MainWindow", "Close"))
        self.pushButton_max.setToolTip(_translate("MainWindow", "Normal size"))
        self.pushButton_Paper.setText(_translate("MainWindow", "Paper "))
        self.pushButton_Scissors.setText(_translate("MainWindow", "Scissors "))
        self.label_4.setText(_translate("MainWindow", "choose :"))
        self.label_5.setText(_translate("MainWindow", "Computer choice :"))
        
        self.pushButton_Paper.clicked.connect(self.user_choice_Paper)
        self.pushButton_Rock.clicked.connect(self.user_choice_Rock)
        self.pushButton_Scissors.clicked.connect(self.user_choice_Scissors)
        
    def user_choice_Paper(self):
        # Function to handle the user's choice when they click on "Paper" button.
        self.campare("Paper")
        
    def user_choice_Rock(self):
        # Function to handle the user's choice when they click on "Rock" button.
        self.campare("Rock")
        
    def user_choice_Scissors(self):
        # Function to handle the user's choice when they click on "Scissors" button.
        self.campare("Scissors")

    def campare(self , status):
        # Function to compare the user's choice with the computer's choice and display the result.
        list = ["Paper" , "Rock" , "Scissors"]
        x = random.choice(list)
        self.label_ComputerChoice.setText(x)

        if (status=="Paper" and x== "Rock") or (status=="Scissors" and x=="Paper") or (status=="Rock" and x=="Scissors"):
            result = "yay you win! ^_^"
        elif status == x:
            result = "Same!"
        else:
            result = "you lost! :("
        self.label_Result.setText(result)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
